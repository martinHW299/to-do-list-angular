{"ast":null,"code":"import _asyncToGenerator from \"/Users/martinhachiya/GitHub/to-do-list-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { USERS } from '../mock-users';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/password-encryption.service\";\nimport * as i3 from \"../auth.service\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/common\";\n\nfunction LoginComponent_div_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵtext(1, \" Incorrect username or password. Please try again. \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport class LoginComponent {\n  constructor(router, passwordEncryptionService, authService) {\n    this.router = router;\n    this.passwordEncryptionService = passwordEncryptionService;\n    this.authService = authService;\n    this.username = '';\n    this.password = '';\n    this.loginError = false;\n  }\n\n  onSubmit() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const user = USERS.find(u => u.name === _this.username);\n\n      if (user && (yield _this.passwordEncryptionService.comparePassword(_this.password, user.pass))) {\n        _this.authService.login();\n\n        _this.router.navigate(['/todo-list']);\n      } else {\n        _this.loginError = true;\n      }\n    })();\n  }\n\n  ngOnInit() {\n    if (this, this.authService.isAuthenticatedUser()) {\n      this.router.navigate(['/todo-list']);\n    }\n  }\n\n}\n\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.PasswordEncryptionService), i0.ɵɵdirectiveInject(i3.AuthService));\n};\n\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 23,\n  vars: 3,\n  consts: [[\"lang\", \"en\"], [\"charset\", \"UTF-8\"], [1, \"bg-info\", \"d-flex\", \"justify-content-center\", \"align-items-center\", \"vh-100\"], [1, \"bg-white\", \"p-5\", \"rounded-5\", \"text-secondary\", \"shadow\", 2, \"width\", \"25rem\"], [1, \"d-flex\", \"justify-content-center\"], [\"src\", \"../../assets/login-icon.svg\", \"alt\", \"login-icon\", 2, \"height\", \"7rem\"], [1, \"text-center\", \"fs-1\", \"fw-bold\"], [3, \"submit\"], [1, \"input-group\", \"mt-4\"], [1, \"input-group-text\", \"bg-info\"], [\"src\", \"../../assets/username-icon.svg\", \"alt\", \"username-icon\", 2, \"height\", \"1rem\"], [\"type\", \"text\", \"id\", \"username\", \"name\", \"username\", \"placeholder\", \"Username\", \"required\", \"\", 1, \"form-control\", \"bg-light\", 3, \"ngModel\", \"ngModelChange\"], [1, \"input-group\", \"mt-1\"], [\"src\", \"../../assets/password-icon.svg\", \"alt\", \"password-icon\", 2, \"height\", \"1rem\"], [\"type\", \"password\", \"id\", \"password\", \"name\", \"password\", \"placeholder\", \"Password\", \"required\", \"\", 1, \"form-control\", \"bg-light\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-info\", \"text-white\", \"w-100\", \"mt-4\", \"fw-semibold\", \"shadow-sm\"], [\"class\", \"alert alert-danger mt-3\", 4, \"ngIf\"], [1, \"alert\", \"alert-danger\", \"mt-3\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"html\", 0)(1, \"head\");\n      i0.ɵɵelement(2, \"meta\", 1);\n      i0.ɵɵelementStart(3, \"title\");\n      i0.ɵɵtext(4, \"login\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(5, \"body\", 2)(6, \"div\", 3)(7, \"div\", 4);\n      i0.ɵɵelement(8, \"img\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"div\", 6);\n      i0.ɵɵtext(10, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"form\", 7);\n      i0.ɵɵlistener(\"submit\", function LoginComponent_Template_form_submit_11_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(12, \"div\", 8)(13, \"div\", 9);\n      i0.ɵɵelement(14, \"img\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"input\", 11);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_15_listener($event) {\n        return ctx.username = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(16, \"div\", 12)(17, \"div\", 9);\n      i0.ɵɵelement(18, \"img\", 13);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"input\", 14);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_19_listener($event) {\n        return ctx.password = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(20, \"button\", 15);\n      i0.ɵɵtext(21, \" Login \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(22, LoginComponent_div_22_Template, 2, 0, \"div\", 16);\n      i0.ɵɵelementEnd()()()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(15);\n      i0.ɵɵproperty(\"ngModel\", ctx.username);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.password);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.loginError);\n    }\n  },\n  dependencies: [i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.NgModel, i4.NgForm, i5.NgIf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJsb2dpbi5jb21wb25lbnQuY3NzIn0= */\"]\n});","map":{"version":3,"mappings":";AAIA,SAASA,KAAT,QAAsB,eAAtB;;;;;;;;;;ICoCgBC;IACIA;IACJA;;;;AD7BhB,OAAM,MAAOC,cAAP,CAAqB;EAKzBC,YACUC,MADV,EAEUC,yBAFV,EAGUC,WAHV,EAGkC;IAFxB;IACA;IACA;IAPV,gBAAmB,EAAnB;IACA,gBAAmB,EAAnB;IACA,kBAAsB,KAAtB;EAMI;;EAEEC,QAAQ;IAAA;;IAAA;MAEZ,MAAMC,IAAI,GAAGR,KAAK,CAACS,IAAN,CAAWC,CAAC,IAAEA,CAAC,CAACC,IAAF,KAAS,KAAI,CAACC,QAA5B,CAAb;;MAEA,IAAIJ,IAAI,WAAU,KAAI,CAACH,yBAAL,CAA+BQ,eAA/B,CAA+C,KAAI,CAACC,QAApD,EAA8DN,IAAI,CAACO,IAAnE,CAAV,CAAR,EAA4F;QAC1F,KAAI,CAACT,WAAL,CAAiBU,KAAjB;;QACA,KAAI,CAACZ,MAAL,CAAYa,QAAZ,CAAqB,CAAC,YAAD,CAArB;MACD,CAHD,MAGO;QACL,KAAI,CAACC,UAAL,GAAkB,IAAlB;MACD;IATW;EAUb;;EAEDC,QAAQ;IACN,IAAI,MAAK,KAAKb,WAAL,CAAiBc,mBAAjB,EAAT,EAAiD;MAC/C,KAAKhB,MAAL,CAAYa,QAAZ,CAAqB,CAAC,YAAD,CAArB;IACD;EACF;;AA3BwB;;;mBAAdf,gBAAcD;AAAA;;;QAAdC;EAAcmB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCZ3BxB,gCAAgB,CAAhB,EAAgB,MAAhB;MAEQA;MAKAA;MAAOA;MAAKA;MAEhBA,gCAA8E,CAA9E,EAA8E,KAA9E,EAA8E,CAA9E,EAA8E,CAA9E,EAA8E,KAA9E,EAA8E,CAA9E;MAGYA;MAKJA;MACAA;MAAsCA;MAAKA;MAC3CA;MAAMA;QAAA,OAAUyB,cAAV;MAAoB,CAApB;MACFzB,gCAA8B,EAA9B,EAA8B,KAA9B,EAA8B,CAA9B;MAEQA;MAKJA;MACAA;MAAiCA;QAAA;MAAA;MAAjCA;MAEJA,iCAA8B,EAA9B,EAA8B,KAA9B,EAA8B,CAA9B;MAEQA;MACJA;MACAA;MAAqCA;QAAA;MAAA;MAArCA;MAEJA;MACIA;MACJA;MACAA;MAGJA;;;;MAdyCA;MAAAA;MAMIA;MAAAA;MAKnCA;MAAAA","names":["USERS","i0","LoginComponent","constructor","router","passwordEncryptionService","authService","onSubmit","user","find","u","name","username","comparePassword","password","pass","login","navigate","loginError","ngOnInit","isAuthenticatedUser","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/martinhachiya/GitHub/to-do-list-angular/src/app/login/login.component.ts","/Users/martinhachiya/GitHub/to-do-list-angular/src/app/login/login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { PasswordEncryptionService } from 'src/app/password-encryption.service';  // Ajusta la ruta según tu estructura de archivos\nimport { User } from '../user.interface';\nimport { USERS } from '../mock-users';\nimport { AuthService } from '../auth.service';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  username: string = '';\n  password: string = '';\n  loginError: boolean = false;\n\n  constructor(\n    private router: Router,\n    private passwordEncryptionService: PasswordEncryptionService,\n    private authService: AuthService\n  ) {}\n\n  async onSubmit() {\n\n    const user = USERS.find(u=>u.name===this.username);\n\n    if (user && await this.passwordEncryptionService.comparePassword(this.password, user.pass)) {\n      this.authService.login();\n      this.router.navigate(['/todo-list']);\n    } else {\n      this.loginError = true;\n    }\n  }\n\n  ngOnInit(): void {\n    if (this,this.authService.isAuthenticatedUser()) {\n      this.router.navigate(['/todo-list']);\n    }\n  }\n}\n","<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta charset=\"UTF-8\" />\n        <!--\n        <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n        -->\n        <title>login</title>\n    </head>\n    <body class=\"bg-info d-flex justify-content-center align-items-center vh-100\">\n        <div class=\"bg-white p-5 rounded-5 text-secondary shadow\" style=\"width: 25rem\">\n            <div class=\"d-flex justify-content-center\">\n                <img\n                src=\"../../assets/login-icon.svg\"\n                alt=\"login-icon\"\n                style=\"height: 7rem\"\n                />\n            </div>\n            <div class=\"text-center fs-1 fw-bold\">Login</div>\n            <form (submit)=\"onSubmit()\">\n                <div class=\"input-group mt-4\">\n                    <div class=\"input-group-text bg-info\">\n                        <img\n                            src=\"../../assets/username-icon.svg\"\n                            alt=\"username-icon\"\n                            style=\"height: 1rem\"\n                        />\n                    </div>\n                    <input type=\"text\" id=\"username\" [(ngModel)]=\"username\" name=\"username\" class=\"form-control bg-light\" placeholder=\"Username\" required>\n                </div>\n                <div class=\"input-group mt-1\">\n                    <div class=\"input-group-text bg-info\">\n                        <img src=\"../../assets/password-icon.svg\" alt=\"password-icon\" style=\"height: 1rem\"/>\n                    </div>\n                    <input type=\"password\" id=\"password\" [(ngModel)]=\"password\" name=\"password\" class=\"form-control bg-light\" placeholder=\"Password\" required>\n                </div>\n                <button type=\"submit\" class=\"btn btn-info text-white w-100 mt-4 fw-semibold shadow-sm\">\n                    Login\n                </button>\n                <div *ngIf=\"loginError\" class=\"alert alert-danger mt-3\">\n                    Incorrect username or password. Please try again.\n                </div>\n            </form>            \n        </div>\n    </body>\n</html>"]},"metadata":{},"sourceType":"module"}