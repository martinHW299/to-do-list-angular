{"ast":null,"code":"import _asyncToGenerator from \"/Users/martinhachiya/GitHub/to-do-list-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { USERS } from '../mock-users';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/password-encryption.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\n\nfunction LoginComponent_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵtext(1, \" Incorrect username or password. Please try again. \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport class LoginComponent {\n  constructor(router, passwordEncryptionService) {\n    this.router = router;\n    this.passwordEncryptionService = passwordEncryptionService;\n    this.username = '';\n    this.password = '';\n    this.loginError = false;\n  }\n\n  onSubmit() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const user = USERS.find(u => u.name === _this.username);\n\n      if (user && (yield _this.passwordEncryptionService.comparePassword(_this.password, user.pass))) {\n        _this.router.navigate(['/todo-list']);\n      } else {\n        _this.loginError = true;\n      }\n    })();\n  }\n\n  ngOnInit() {}\n\n}\n\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.PasswordEncryptionService));\n};\n\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 18,\n  vars: 3,\n  consts: [[1, \"container\", \"mt-5\"], [1, \"card\"], [1, \"card-header\"], [1, \"card-body\"], [3, \"submit\"], [1, \"mb-3\"], [\"for\", \"username\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"username\", \"name\", \"username\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"password\", 1, \"form-label\"], [\"type\", \"password\", \"id\", \"password\", \"name\", \"password\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [\"class\", \"alert alert-danger mt-3\", 4, \"ngIf\"], [1, \"alert\", \"alert-danger\", \"mt-3\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h3\");\n      i0.ɵɵtext(4, \"Login\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(5, \"div\", 3)(6, \"form\", 4);\n      i0.ɵɵlistener(\"submit\", function LoginComponent_Template_form_submit_6_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(7, \"div\", 5)(8, \"label\", 6);\n      i0.ɵɵtext(9, \"Username:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"input\", 7);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_10_listener($event) {\n        return ctx.username = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(11, \"div\", 5)(12, \"label\", 8);\n      i0.ɵɵtext(13, \"Password:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"input\", 9);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_14_listener($event) {\n        return ctx.password = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(15, \"button\", 10);\n      i0.ɵɵtext(16, \"Iniciar Sesi\\u00F3n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(17, LoginComponent_div_17_Template, 2, 0, \"div\", 11);\n      i0.ɵɵelementEnd()()()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"ngModel\", ctx.username);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.password);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.loginError);\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm, i4.NgIf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJsb2dpbi5jb21wb25lbnQuY3NzIn0= */\"]\n});","map":{"version":3,"mappings":";AAIA,SAASA,KAAT,QAAsB,eAAtB;;;;;;;;;ICYgBC;IACIA;IACJA;;;;ADNhB,OAAM,MAAOC,cAAP,CAAqB;EAKzBC,YACUC,MADV,EAEUC,yBAFV,EAE8D;IADpD;IACA;IANV,gBAAmB,EAAnB;IACA,gBAAmB,EAAnB;IACA,kBAAsB,KAAtB;EAKI;;EAEEC,QAAQ;IAAA;;IAAA;MAEZ,MAAMC,IAAI,GAAGP,KAAK,CAACQ,IAAN,CAAWC,CAAC,IAAEA,CAAC,CAACC,IAAF,KAAS,KAAI,CAACC,QAA5B,CAAb;;MAEA,IAAIJ,IAAI,WAAU,KAAI,CAACF,yBAAL,CAA+BO,eAA/B,CAA+C,KAAI,CAACC,QAApD,EAA8DN,IAAI,CAACO,IAAnE,CAAV,CAAR,EAA4F;QAC1F,KAAI,CAACV,MAAL,CAAYW,QAAZ,CAAqB,CAAC,YAAD,CAArB;MACD,CAFD,MAEO;QACL,KAAI,CAACC,UAAL,GAAkB,IAAlB;MACD;IARW;EASb;;EAEDC,QAAQ,IACP;;AAtBwB;;;mBAAdf,gBAAcD;AAAA;;;QAAdC;EAAcgB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCZ3BrB,+BAA4B,CAA5B,EAA4B,KAA5B,EAA4B,CAA5B,EAA4B,CAA5B,EAA4B,KAA5B,EAA4B,CAA5B,EAA4B,CAA5B,EAA4B,IAA5B;MAGgBA;MAAKA;MAEbA,+BAAuB,CAAvB,EAAuB,MAAvB,EAAuB,CAAvB;MACUA;QAAA,OAAUsB,cAAV;MAAoB,CAApB;MACFtB,+BAAkB,CAAlB,EAAkB,OAAlB,EAAkB,CAAlB;MAC6CA;MAASA;MAClDA;MAAiCA;QAAA;MAAA;MAAjCA;MAEJA,gCAAkB,EAAlB,EAAkB,OAAlB,EAAkB,CAAlB;MAC6CA;MAASA;MAClDA;MAAqCA;QAAA;MAAA;MAArCA;MAEJA;MAA8CA;MAAcA;MAC5DA;MAGJA;;;;MAVyCA;MAAAA;MAIIA;MAAAA;MAGnCA;MAAAA","names":["USERS","i0","LoginComponent","constructor","router","passwordEncryptionService","onSubmit","user","find","u","name","username","comparePassword","password","pass","navigate","loginError","ngOnInit","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/martinhachiya/GitHub/to-do-list-angular/src/app/login/login.component.ts","/Users/martinhachiya/GitHub/to-do-list-angular/src/app/login/login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { PasswordEncryptionService } from 'src/app/password-encryption.service';  // Ajusta la ruta según tu estructura de archivos\nimport { User } from '../user.interface';\nimport { USERS } from '../mock-users';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  username: string = '';\n  password: string = '';\n  loginError: boolean = false;\n\n  constructor(\n    private router: Router,\n    private passwordEncryptionService: PasswordEncryptionService\n  ) {}\n\n  async onSubmit() {\n\n    const user = USERS.find(u=>u.name===this.username);\n\n    if (user && await this.passwordEncryptionService.comparePassword(this.password, user.pass)) {\n      this.router.navigate(['/todo-list']);\n    } else {\n      this.loginError = true;\n    }\n  }\n\n  ngOnInit(): void {\n  }\n}\n","<div class=\"container mt-5\">\n    <div class=\"card\">\n        <div class=\"card-header\">\n            <h3>Login</h3>\n        </div>\n        <div class=\"card-body\">\n            <form (submit)=\"onSubmit()\">\n                <div class=\"mb-3\">\n                    <label for=\"username\" class=\"form-label\">Username:</label>\n                    <input type=\"text\" id=\"username\" [(ngModel)]=\"username\" name=\"username\" class=\"form-control\" required>\n                </div>\n                <div class=\"mb-3\">\n                    <label for=\"password\" class=\"form-label\">Password:</label>\n                    <input type=\"password\" id=\"password\" [(ngModel)]=\"password\" name=\"password\" class=\"form-control\" required>\n                </div>\n                <button type=\"submit\" class=\"btn btn-primary\">Iniciar Sesión</button>\n                <div *ngIf=\"loginError\" class=\"alert alert-danger mt-3\">\n                    Incorrect username or password. Please try again.\n                </div>\n            </form>\n        </div>\n    </div>\n</div>\n  "]},"metadata":{},"sourceType":"module"}