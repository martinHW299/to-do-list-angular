{"ast":null,"code":"import _asyncToGenerator from \"/Users/martinhachiya/GitHub/to-do-list-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/password-encryption.service\";\nimport * as i3 from \"@angular/forms\";\nexport class LoginComponent {\n  constructor(router, passwordEncryptionService) {\n    this.router = router;\n    this.passwordEncryptionService = passwordEncryptionService;\n    this.username = '';\n    this.password = '';\n  }\n\n  onSubmit() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const hashedPassword = yield _this.passwordEncryptionService.encryptPassword(_this.password);\n\n      if (_this.username === 'martin' && (yield _this.passwordEncryptionService.comparePassword('123', hashedPassword))) {\n        _this.router.navigate(['/todo-list']);\n      } else {\n        _this.router.navigate(['']);\n      }\n    })();\n  }\n\n  ngOnInit() {}\n\n}\n\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.PasswordEncryptionService));\n};\n\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 14,\n  vars: 2,\n  consts: [[1, \"container\"], [3, \"submit\"], [1, \"form-group\"], [\"for\", \"username\"], [\"type\", \"text\", \"id\", \"username\", \"name\", \"username\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"name\", \"password\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h2\");\n      i0.ɵɵtext(1, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\", 0)(3, \"form\", 1);\n      i0.ɵɵlistener(\"submit\", function LoginComponent_Template_form_submit_3_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(4, \"div\", 2)(5, \"label\", 3);\n      i0.ɵɵtext(6, \"Usuario:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"input\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_7_listener($event) {\n        return ctx.username = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"div\", 2)(9, \"label\", 5);\n      i0.ɵɵtext(10, \"Contrase\\u00F1a:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"input\", 6);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_11_listener($event) {\n        return ctx.password = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(12, \"button\", 7);\n      i0.ɵɵtext(13, \"Iniciar Sesi\\u00F3n\");\n      i0.ɵɵelementEnd()()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngModel\", ctx.username);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.password);\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJsb2dpbi5jb21wb25lbnQuY3NzIn0= */\"]\n});","map":{"version":3,"mappings":";;;;;AASA,OAAM,MAAOA,cAAP,CAAqB;EAIzBC,YACUC,MADV,EAEUC,yBAFV,EAE8D;IADpD;IACA;IALV,gBAAmB,EAAnB;IACA,gBAAmB,EAAnB;EAKI;;EAEEC,QAAQ;IAAA;;IAAA;MACZ,MAAMC,cAAc,SAAS,KAAI,CAACF,yBAAL,CAA+BG,eAA/B,CAA+C,KAAI,CAACC,QAApD,CAA7B;;MAEA,IAAI,KAAI,CAACC,QAAL,KAAkB,QAAlB,WAAoC,KAAI,CAACL,yBAAL,CAA+BM,eAA/B,CAA+C,KAA/C,EAAsDJ,cAAtD,CAApC,CAAJ,EAA+G;QAC7G,KAAI,CAACH,MAAL,CAAYQ,QAAZ,CAAqB,CAAC,YAAD,CAArB;MACD,CAFD,MAEO;QACL,KAAI,CAACR,MAAL,CAAYQ,QAAZ,CAAqB,CAAC,EAAD,CAArB;MACD;IAPW;EAQb;;EAEDC,QAAQ,IACP;;AApBwB;;;mBAAdX,gBAAcY;AAAA;;;QAAdZ;EAAca;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCT3BL;MAAIA;MAAKA;MACTA,+BAAuB,CAAvB,EAAuB,MAAvB,EAAuB,CAAvB;MACMA;QAAA,OAAUM,cAAV;MAAoB,CAApB;MACFN,+BAAwB,CAAxB,EAAwB,OAAxB,EAAwB,CAAxB;MAC0BA;MAAQA;MAC9BA;MAAiCA;QAAA;MAAA;MAAjCA;MAEJA,+BAAwB,CAAxB,EAAwB,OAAxB,EAAwB,CAAxB;MAC0BA;MAAWA;MACjCA;MAAqCA;QAAA;MAAA;MAArCA;MAEJA;MAA8CA;MAAcA;;;;MANvBA;MAAAA;MAIIA;MAAAA","names":["LoginComponent","constructor","router","passwordEncryptionService","onSubmit","hashedPassword","encryptPassword","password","username","comparePassword","navigate","ngOnInit","i0","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/martinhachiya/GitHub/to-do-list-angular/src/app/login/login.component.ts","/Users/martinhachiya/GitHub/to-do-list-angular/src/app/login/login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { PasswordEncryptionService } from 'src/app/password-encryption.service';  // Ajusta la ruta según tu estructura de archivos\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  username: string = '';\n  password: string = '';\n\n  constructor(\n    private router: Router,\n    private passwordEncryptionService: PasswordEncryptionService\n  ) {}\n\n  async onSubmit() {\n    const hashedPassword = await this.passwordEncryptionService.encryptPassword(this.password);\n\n    if (this.username === 'martin' && await this.passwordEncryptionService.comparePassword('123', hashedPassword)) {\n      this.router.navigate(['/todo-list']);\n    } else {\n      this.router.navigate(['']);\n    }\n  }\n\n  ngOnInit(): void {\n  }\n}\n","<h2>Login</h2>\n<div class=\"container\">\n<form (submit)=\"onSubmit()\">\n    <div class=\"form-group\">\n        <label for=\"username\">Usuario:</label>\n        <input type=\"text\" id=\"username\" [(ngModel)]=\"username\" name=\"username\" class=\"form-control\" required>\n    </div>\n    <div class=\"form-group\">\n        <label for=\"password\">Contraseña:</label>\n        <input type=\"password\" id=\"password\" [(ngModel)]=\"password\" name=\"password\" class=\"form-control\" required>\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary\">Iniciar Sesión</button>\n</form>\n</div>\n"]},"metadata":{},"sourceType":"module"}